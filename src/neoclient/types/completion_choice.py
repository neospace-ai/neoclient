from pydantic import BaseModel
from typing_extensions import Literal

class CompletionChoice(BaseModel):
    """
    Represents a single choice generated by the model during a completion request.

    Attributes:
        finish_reason (Literal["stop", "length", "content_filter"]): The reason why the model 
            stopped generating tokens. Possible values:
            - "stop": The model reached a natural stopping point or a specified stop sequence.
            - "length": The maximum number of tokens specified in the request was reached.
            - "content_filter": Content was omitted due to a flag from the content filters.

        index (int): The index of this choice in the list of generated choices.

        text (str): The generated text for this choice.
    """
    finish_reason: Literal["stop", "length", "content_filter"]
    """The reason why the model stopped generating tokens."""

    index: int
    """The index of this choice in the list of generated choices."""

    text: str
    """The generated text for this choice."""
